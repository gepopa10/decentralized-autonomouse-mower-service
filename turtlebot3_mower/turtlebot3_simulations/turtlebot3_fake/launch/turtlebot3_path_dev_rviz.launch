<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>

  <param name="tb3_model" value="$(arg model)"/>

  <param name="ini_pos_x" value="2.46"/>
  <param name="ini_pos_y" value="-10.47"/>
  <param name="ini_yaw" value="0.0"/>
  <arg name="position_noise" default="0.0"/>
  <arg name="theta_noise" default="0.0"/>

  <!-- Position when testing smaller trajs -->
  <!-- <param name="ini_pos_x" value="0"/>
  <param name="ini_pos_y" value="0"/>
  <param name="ini_yaw" value="0"/> -->

  <include file="$(find turtlebot3_bringup)/launch/includes/description.launch.xml">
    <arg name="model" value="$(arg model)" />
  </include>

  <node pkg="turtlebot3_fake" type="turtlebot3_fake_node" name="turtlebot3_fake_node" output="screen" />

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot3_fake)/rviz/turtlebot3_fake.rviz"/>

  <!-- Add Gaussain noise to the odometry topic -->
  <include file="$(find gaussian_noise)/launch/gaussian_noise_odom.launch">
    <arg name="odometry_topic" default="/odom" />
  	<arg name="noisy_odometry_topic" default="/noisy_odom" />
    <arg name="position_noise" default="$(arg position_noise)" />
    <arg name="theta_noise" default="$(arg theta_noise)" />
  </include>

  <!-- High-level controller -->
  <include file="$(find high_level_controller)/launch/path.launch">
    <arg name="odometry_topic" default="/odom" />
    <arg name="noisy_odometry_topic" default="/noisy_odom" />
    <arg name="cmd_vel_topic" default="/cmd_vel" />
  </include>
  <!-- Path planner -->
  <include file="$(find path_planner_from_points)/launch/path_planner_from_points.launch">
    <arg name="input_path_topic" default="/move_base_simple/path_raw" />
  	<arg name="output_path_topic" default="/move_base_simple/path" />
  </include>
  <!-- publish a path from an input txt file service -->
  <node pkg="boustrophedon_optimal_path_planner" type="publish_raw_path_from_fullpath_meters.py" name="publish_raw_path_from_fullpath_meters.py" output="screen"/>

  <!-- WebSocket -->
  <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch">
    <arg name="port" default="9091" />
    <arg name="address" default="0.0.0.0" />
  </include>
</launch>
